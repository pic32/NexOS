v1.02.01 1/20/2023
 - Changed the context switch in the PIC32 port to be 8 byte aligned with the 
   stack space that is allocated.
 - The registers k0 and k1 were getting clobbered during a context switch, these
   are now preserved.  Not that this was probably a problem, but it's fixed.
 - Modified Port.c for the PIC32MX to use OS_PRIORITY define instead of hard
   coded interrupt levels.
 - Modified Port.c for the PIC32MX to use INITIAL_STATUS_REGISTER_VALUE define
   for the initial status register value in the method PortInitializeTaskStack().
 - INITIAL_STATUS_REGISTER_VALUE is now defined in Port.h.

v1.02.00 12/19/2022
 - Changed the UART TX Callbacks so that they got the data being transmitted out.
 - Added all applicable FromISR methods to CallbackTimer.c
 - Removed parameter checking in non ISR methods for SoftwareTimer.c and 
   CallbackTimer.c.  The parameter checking is only done in the FromISR methods.
   This same policy will be brought over to all modules if not done already.

v1.01.05 10/07/2022
 - Changed the stack units from words to bytes.
 - Fixed bugs in the calculations of all methods converting to or from OS ticks.
 - Fixed a bug where a value < 0 for the wait period in WaitForEvent() would
   actually cause the TASK to wake up eventually.
 - Made all methods that used a delay in ticks use an INT32 and all behaviors
   are the same for the delay regardless of method.
 - Added the CallbackTimerSetCallback(), CallbackTimerResetFromISR(), and
   CallbackTimerEnableFromISR() methods.
 - Moved the MINIMUM_STACK_SIZE_IN_BYTES to RTOSConfig.h
 - Added the TaskDelayMicroseconds() method.

v1.01.04 8/12/2022
 - Added the ability to keep track of how long a TASK has executed for.
 - Added a method to ToString() all the TASK execution times.
 - Added the check statement for the right version of the RTOSConfig.h file.
 - Added in the TASK unique ID feature.  Each TASK is assigned one at creation.
 - Added in the ability to get a task execution history list with their latest
   execution times.
 - Added the GenericTypes.h file to the project.  This needs to be present in
   the project folder to compile correctly.
 - Tested out the stack usage of the IO Buffer TASK and Maintenance TASK.  Now
   those stack sizes are smaller and reflect better the size they should be.
 - Modified the file ff.h in the FileSystem project to use GenericTypes.h.
 - Modified the PIC32 ADC port to support 16 bit ADC data reads.
 - Updated all example projects to latest RTOSConfig.h file.

v1.01.03 7/20/2022
 - Updated the path in OS_Callback.c for a relative location for the *.h file.
 - Added in the method IOBufferGetState().
 - Fixed a bug in IOBufferReadLine() where the existing data in the IO_BUFFER
   was not read into the user buffer.
 - Added the ability to analyze a TASK stack with the method AnalyzeTaskStack().
   This method returns how many words are left in the stack untouched.
 - Added the ability to catch a TASK stack pointer that overflowed during a
   context switch by the OS.  The method TaskStackOverflowUserCallback() is 
   called when this happens.
 - The system stack is now introduced for interrupt handling.  Its size can
   be configured up in RTOSConfig.h.
 - Fixed up some of the headers in OS_EventCallback.h that were missing.

v1.01.02 7/11/2022
- Updated the CallocMemory() to have the additional parameter NumberOfItems.
- Added the USING_GET_HEAP_USED_IN_BYTES_METHOD and 
  USING_GET_HEAP_REMAINING_IN_BYTES_METHOD into RTOSConfig.h.

v1.01.01 6/2/2022
- The File System Project is now incorporated.  This project shows
  integration of the NexOS with the FatFs.  There is one example
  project which has 2 tasks writing data to their own files.  There
  are 2 configurations for the project.  Configuration 1 has the
  default media as a SD card, and configuration 2 has the default
  media as a flash IC (SST26VF064B).

v1.01.00 5/25/2022
- This version has support for the UART, CAN, and ADC IO_BUFFERS.
- Updated the interrupt handlers for some new EVENTS.
- Fixed a bunch of bugs.  After this release we will be tracking 
  them to have a log.

v1.00.00 10/14/2020
- This is the original release of the NexOS.